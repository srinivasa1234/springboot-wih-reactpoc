{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\springboot-with-react\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment';\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    console.log('constructor');\n    super(props);\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log(nextProps);\n    console.log(nextState);\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.refreshTodos();\n    console.log(this.state);\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      //console.log(response);\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName(); //console.log(id + \" \" + username);\n\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: `Delete of todo ${id} Successful`\n      });\n      this.refreshTodos();\n    });\n  }\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  }\n\n  updateTodoClicked(id) {\n    console.log('update ' + id);\n    this.props.history.push(`/todos/${id}`); // /todos/${id}\n    // let username = AuthenticationService.getLoggedInUserName()\n    // //console.log(id + \" \" + username);\n    // TodoDataService.deleteTodo(username, id)\n    //  .then (\n    //      response => {\n    //         this.setState({message : `Delete of todo ${id} Successful`})\n    //         this.refreshTodos()\n    //      }\n    //  )\n  }\n\n  render() {\n    console.log('render');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"List Todos\"), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 40\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Target Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"IsCompleted?\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, this.state.todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, todo.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }, moment(todo.targetDate).format('YYYY-MM-DD')), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, todo.done.toString()), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateTodoClicked(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteTodoClicked(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 49\n      }\n    }, \"Delete\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.addTodoClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Add\"))));\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["C:/workspace/springboot-with-react/frontend/todo-app/src/components/todo/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodosComponent","constructor","props","console","log","state","todos","message","deleteTodoClicked","bind","updateTodoClicked","addTodoClicked","refreshTodos","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","componentDidMount","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","id","deleteTodo","history","push","render","map","todo","description","targetDate","format","done","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass ListTodosComponent extends Component {\n    constructor(props) {\n        console.log('constructor')\n        super(props)\n        this.state = {\n            todos: [],\n            message: null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.refreshTodos();\n        console.log(this.state)\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.setState({ todos: response.data })\n                }\n            )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id + \" \" + username);\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of todo ${id} Successful` })\n                    this.refreshTodos()\n                }\n            )\n\n    }\n\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    updateTodoClicked(id) {\n        console.log('update ' + id)\n        this.props.history.push(`/todos/${id}`)\n        // /todos/${id}\n        // let username = AuthenticationService.getLoggedInUserName()\n        // //console.log(id + \" \" + username);\n        // TodoDataService.deleteTodo(username, id)\n        //  .then (\n        //      response => {\n        //         this.setState({message : `Delete of todo ${id} Successful`})\n        //         this.refreshTodos()\n        //      }\n        //  )\n\n    }\n\n    render() {\n        console.log('render')\n        return (\n            <div>\n                <h1>List Todos</h1>\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>IsCompleted?</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map(\n                                    todo =>\n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}